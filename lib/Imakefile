DEPEND = sh ./depend.sh

CXX = clang++
AR = llvm-ar clq
RANLIB = llvm-ranlib

ALEPHW = $(shell echo $$ALEPHW)
JSON = $(shell echo $$JSON)/include

INCLUDES = -I$(TOP)/include -I$(ALEPHW) -I$(JSON)
WARN= -Wall -Wextra -Wcast-align -Wno-sign-compare -Wno-write-strings -Wno-parentheses

# By default this lib is compiled with clang sanitizer options
# Comment the following line and uncoment the next one if you want
# full performamce 
FLAGS = -std=c++14 $(WARN) -O0 -g -fsanitize=address,undefined -fno-omit-frame-pointer
#FLAGS = -std=c++14 $(WARN) -O2

OPTIONS = $(FLAGS)
CXXFLAGS= -std=c++14 $(INCLUDES) $(OPTIONS)

LIBSRCS = units-vars.cc

UNITSPATH = $(TOP)/include

SRCS = uconv.cc
OBJS = uconv.o 

EXTRACT_CV = $(TOP)/bin/extract-cv

units.cc: $(TOP)/include/uconv.H uconv.cc
	$(RM) -f $@;					\	@@\
	$(CP) preamble.txt $*.tmp;			\	@@\
	$(CPP) $(CXXFLAGS) uconv.cc >> $*.tmp;		\	@@\
	cat uconv.cc >> $@;				\	@@\
	$(EXTRACT_CV) $*.tmp >> $@;			\	@@\
	$(RM) $*.tmp

units.o:: units.cc

clean::
	$(RM) -f units.cc

NormalLibraryObjectRule()
NormalLibraryTarget(uconv,units.o)
InstallLibrary(uconv,./)

DependTarget()
